.spot-form.jumbotron
  = f.hidden_field :id, class: "spot-field-id"
  = f.hidden_field :_destroy, class: "destroy-spot"
  - if f.index == 0
    = f.hidden_field :latitude, class: "first-spot-latitude"
    = f.hidden_field :longitude, class: "first-spot-longitude"
  - elsif f.index == @plan.spots.length - 1
    = f.hidden_field :latitude, class: "last-spot-latitude"
    = f.hidden_field :longitude, class: "last-spot-longitude"
  - else
    = f.hidden_field :latitude, class: "spot-latitude"
    = f.hidden_field :longitude, class: "spot-longitude"
  = hidden_field_tag :place_id, "", class: "place-id"
  = f.input :name, placeholder: t("form.maximum_length", length: 50), hint: t("form.spot_name_hint"), input_html: { class: "spot-name", autocomplete: "nope" }
  = f.input :description, input_html: { rows: 5 }, placeholder: t("form.maximum_length", length: 1000), hint: t("form.spot_description_hint")
  .form-group{ class: "#{'has-error' if f.object.errors.present?}" }
    = f.label :photos, Photo.model_name.human, class: "control-label"
    - photo_error_messages = []
    .row.flex.photo-field
      = f.simple_fields_for :photos do |photo_f|
        - photo_error_messages += photo_f.object.errors.full_messages_for(:image).map { |msg| msg }
        - if photo_f.object.valid?
          .col-sm-4.photo-area
            = photo_f.hidden_field :id
            = photo_f.hidden_field :_destroy, class: "destroy-photo"
            .photo
              = image_tag photo_f.object.image.thumb.url
              = link_to t("form.destroy_photo"), "javascript:void(0);", class: "destroy-photo-btn"
    = f.file_field :photos, multiple: true, class: "preview-photo"
    - photo_error_messages.each do |msg|
      .help-block= msg
  = link_to t("form.destroy_spot"), "javascript:void(0);", class: "btn btn-danger destroy-spot-btn"
